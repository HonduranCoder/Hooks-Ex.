{"ast":null,"code":"var _jsxFileName = \"/Users/stefbaughman/Desktop/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './context/auth-context.js';\n//import AuthContext from './context/auth-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  //   const storedUser = localStorage.getItem('isLoggedIn');\n  //   if (storedUser === '1') {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1');\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n  const ctx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","ctx","isLoggedIn","loginHandler","logoutHandler"],"sources":["/Users/stefbaughman/Desktop/01-starting-project/src/App.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './context/auth-context.js';\n//import AuthContext from './context/auth-context.js';\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  //   const storedUser = localStorage.getItem('isLoggedIn');\n  //   if (storedUser === '1') {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1');\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n  const ctx = useContext(AuthContext);\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login onLogin={loginHandler} />}\n        {ctx.isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AACnD;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMC,GAAG,GAAGN,UAAU,CAACI,WAAW,CAAC;EAEnC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd;MAAA,WACG,CAACE,GAAG,CAACC,UAAU,iBAAI,QAAC,KAAK;QAAC,OAAO,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EACnDF,GAAG,CAACC,UAAU,iBAAI,QAAC,IAAI;QAAC,QAAQ,EAAEE;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAErB;AAAC,GAjCQJ,GAAG;AAAA,KAAHA,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}